{"ast":null,"code":"var _jsxFileName = \"/home/jbj/front/src/components/VcIssueModal.js\",\n  _s = $RefreshSig$();\n// src/components/VcIssueModal.js\n\nimport React, { useState } from \"react\";\nimport \"./VcIssueModal.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VcIssueModal({\n  onClose\n}) {\n  _s();\n  // 1) 입력 폼에 필요한 state 선언\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [did, setDid] = useState(\"\");\n\n  // 2) 폼 제출 핸들러\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // 빈 칸 체크\n    if (!name || !email || !did) {\n      alert(\"모든 정보를 입력해주세요.\");\n      return;\n    }\n\n    // 실제 발급 로직(예: axios/fetch)을 여기서 처리할 수도 있음\n    // 예시: axios.post(\"/api/vc/issue\", { name, email, did })\n    //       .then(response => { ... }).catch(err => { ... });\n\n    // 지금은 단순 알림\n    alert(\"발급이 완료되었습니다!\");\n    onClose(); // 모달 닫기\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vc-modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vc-modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"vc-modal-close\",\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"VC \\uBC1C\\uAE09 \\uC815\\uBCF4 \\uC785\\uB825\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"vc-issue-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"vc-name\",\n          children: \"\\uC774\\uB984\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"vc-name\",\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          placeholder: \"\\uD64D\\uAE38\\uB3D9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"vc-email\",\n          children: \"\\uC774\\uBA54\\uC77C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"vc-email\",\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"example@domain.com\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"vc-did\",\n          children: \"DID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"vc-did\",\n          type: \"text\",\n          value: did,\n          onChange: e => setDid(e.target.value),\n          placeholder: \"did:example:123456789\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"vc-submit-button\",\n          children: \"\\uC9C0\\uAE08 VC\\uBC1C\\uAE09\\uBC1B\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(VcIssueModal, \"jDkC31ZyLSfL6zcNYRwVai5i8nI=\");\n_c = VcIssueModal;\nexport default VcIssueModal;\nvar _c;\n$RefreshReg$(_c, \"VcIssueModal\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","VcIssueModal","onClose","_s","name","setName","email","setEmail","did","setDid","handleSubmit","e","preventDefault","alert","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/home/jbj/front/src/components/VcIssueModal.js"],"sourcesContent":["// src/components/VcIssueModal.js\n\nimport React, { useState } from \"react\";\nimport \"./VcIssueModal.css\";\n\nfunction VcIssueModal({ onClose }) {\n    // 1) 입력 폼에 필요한 state 선언\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [did, setDid] = useState(\"\");\n\n    // 2) 폼 제출 핸들러\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        // 빈 칸 체크\n        if (!name || !email || !did) {\n            alert(\"모든 정보를 입력해주세요.\");\n            return;\n        }\n\n        // 실제 발급 로직(예: axios/fetch)을 여기서 처리할 수도 있음\n        // 예시: axios.post(\"/api/vc/issue\", { name, email, did })\n        //       .then(response => { ... }).catch(err => { ... });\n\n        // 지금은 단순 알림\n        alert(\"발급이 완료되었습니다!\");\n        onClose(); // 모달 닫기\n    };\n\n    return (\n        <div className=\"vc-modal-overlay\">\n            <div className=\"vc-modal-content\">\n                {/* 닫기 버튼 */}\n                <button className=\"vc-modal-close\" onClick={onClose}>\n                    &times;\n                </button>\n\n                <h2>VC 발급 정보 입력</h2>\n\n                <form className=\"vc-issue-form\" onSubmit={handleSubmit}>\n                    {/* 이름 입력 */}\n                    <label htmlFor=\"vc-name\">이름</label>\n                    <input\n                        id=\"vc-name\"\n                        type=\"text\"\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                        placeholder=\"홍길동\"\n                    />\n\n                    {/* 이메일 입력 */}\n                    <label htmlFor=\"vc-email\">이메일</label>\n                    <input\n                        id=\"vc-email\"\n                        type=\"email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        placeholder=\"example@domain.com\"\n                    />\n\n                    {/* DID 입력 */}\n                    <label htmlFor=\"vc-did\">DID</label>\n                    <input\n                        id=\"vc-did\"\n                        type=\"text\"\n                        value={did}\n                        onChange={(e) => setDid(e.target.value)}\n                        placeholder=\"did:example:123456789\"\n                    />\n\n                    {/* (원한다면 추가 input 필드를 여기 더 추가) */}\n\n                    <button type=\"submit\" className=\"vc-submit-button\">\n                        지금 VC발급받기\n                    </button>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default VcIssueModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}