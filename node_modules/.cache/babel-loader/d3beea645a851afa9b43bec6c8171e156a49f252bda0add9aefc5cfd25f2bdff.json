{"ast":null,"code":"var _jsxFileName = \"/home/jbj/front/src/components/VcIssueModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './VcIssueModal.css';\n\n// 백엔드 주소와 API 엔드포인트 정의\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BASE_API_URL = 'http://localhost:8080';\nconst VC_ISSUE_API_ENDPOINT = `${BASE_API_URL}/api/vc/issue`;\nfunction VcIssueModal({\n  onClose\n}) {\n  _s();\n  // 로딩 상태와 오류 메시지를 관리하기 위한 state\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n  // \"발급 실행\" 버튼 클릭 시 호출될 함수\n  const handleIssueVC = async () => {\n    setIsLoading(true);\n    setError('');\n    setSuccessMessage('');\n    try {\n      // 1. 로컬 스토리지 등에서 로그인 시 저장된 JWT 토큰을 가져옵니다.\n      const token = localStorage.getItem('jwt_token');\n      if (!token) {\n        setError('로그인이 필요합니다. 다시 로그인해주세요.');\n        setIsLoading(false);\n        return;\n      }\n\n      // 2. 백엔드의 VC 발급 API를 호출합니다.\n      //    헤더에 인증 토큰을 담아서 보내고, 요청 본문(body)은 비워둡니다.\n      const response = await axios.post(VC_ISSUE_API_ENDPOINT, {},\n      // body는 비어있음\n      {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'ngrok-skip-browser-warning': 'true' // ngrok 사용 시 필요\n        }\n      });\n\n      // 3. 성공 처리\n      console.log('VC 발급 성공:', response.data);\n      setSuccessMessage('✅ VC가 성공적으로 발급되었습니다! 이제 이 VC를 사용해 로그인할 수 있습니다.');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      // 4. 실패 처리\n      console.error('VC 발급 실패:', err.response || err);\n      const errorMessage = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message || '알 수 없는 오류가 발생했습니다.';\n      setError(`❌ VC 발급에 실패했습니다: ${errorMessage}`);\n    } finally {\n      // 5. 로딩 상태 종료\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vc-modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vc-modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"vc-modal-close\",\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDCDC \\uC790\\uACA9\\uC99D\\uBA85(VC) \\uBC1C\\uAE09\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), !successMessage && !error && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uACF5\\uC778\\uC911\\uAC1C\\uC0AC \\uC790\\uACA9\\uC99D\\uBA85(VC)\\uC744 \\uBC1C\\uAE09\\uBC1B\\uC73C\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C? VC\\uAC00 \\uBC1C\\uAE09\\uB418\\uBA74 \\uC804\\uACFC\\uAE30\\uB85D \\uB4F1 \\uC790\\uACA9\\uC694\\uAC74\\uC5D0 \\uB530\\uB77C \\uC11C\\uBE44\\uC2A4 \\uC774\\uC6A9\\uC774 \\uC81C\\uD55C\\uB420 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleIssueVC,\n          className: \"vc-submit-button\",\n          disabled: isLoading,\n          children: isLoading ? '발급 진행 중...' : 'VC 발급 실행'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC11C\\uBC84\\uC640 \\uD1B5\\uC2E0\\uD558\\uBA70 VC\\uB97C \\uC0DD\\uC131\\uD558\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4. \\uC7A0\\uC2DC\\uB9CC \\uAE30\\uB2E4\\uB824\\uC8FC\\uC138\\uC694...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 31\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red',\n          fontWeight: 'bold'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 27\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'green',\n          fontWeight: 'bold'\n        },\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(VcIssueModal, \"+rcvXSq9GNbDMan3ngi1lYKgWkE=\");\n_c = VcIssueModal;\nexport default VcIssueModal;\nvar _c;\n$RefreshReg$(_c, \"VcIssueModal\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","BASE_API_URL","VC_ISSUE_API_ENDPOINT","VcIssueModal","onClose","_s","isLoading","setIsLoading","error","setError","successMessage","setSuccessMessage","handleIssueVC","token","localStorage","getItem","response","post","headers","console","log","data","err","_err$response","_err$response$data","errorMessage","message","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","disabled","style","color","fontWeight","_c","$RefreshReg$"],"sources":["/home/jbj/front/src/components/VcIssueModal.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './VcIssueModal.css';\n\n// 백엔드 주소와 API 엔드포인트 정의\nconst BASE_API_URL = 'http://localhost:8080';\nconst VC_ISSUE_API_ENDPOINT = `${BASE_API_URL}/api/vc/issue`;\n\nfunction VcIssueModal({ onClose }) {\n    // 로딩 상태와 오류 메시지를 관리하기 위한 state\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState('');\n    const [successMessage, setSuccessMessage] = useState('');\n\n    // \"발급 실행\" 버튼 클릭 시 호출될 함수\n    const handleIssueVC = async () => {\n        setIsLoading(true);\n        setError('');\n        setSuccessMessage('');\n\n        try {\n            // 1. 로컬 스토리지 등에서 로그인 시 저장된 JWT 토큰을 가져옵니다.\n            const token = localStorage.getItem('jwt_token');\n\n            if (!token) {\n                setError('로그인이 필요합니다. 다시 로그인해주세요.');\n                setIsLoading(false);\n                return;\n            }\n\n            // 2. 백엔드의 VC 발급 API를 호출합니다.\n            //    헤더에 인증 토큰을 담아서 보내고, 요청 본문(body)은 비워둡니다.\n            const response = await axios.post(\n                VC_ISSUE_API_ENDPOINT,\n                {}, // body는 비어있음\n                {\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                        'ngrok-skip-browser-warning': 'true', // ngrok 사용 시 필요\n                    },\n                }\n            );\n\n            // 3. 성공 처리\n            console.log('VC 발급 성공:', response.data);\n            setSuccessMessage('✅ VC가 성공적으로 발급되었습니다! 이제 이 VC를 사용해 로그인할 수 있습니다.');\n\n        } catch (err) {\n            // 4. 실패 처리\n            console.error('VC 발급 실패:', err.response || err);\n            const errorMessage = err.response?.data?.error || err.message || '알 수 없는 오류가 발생했습니다.';\n            setError(`❌ VC 발급에 실패했습니다: ${errorMessage}`);\n        } finally {\n            // 5. 로딩 상태 종료\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"vc-modal-overlay\">\n            <div className=\"vc-modal-content\">\n                <button className=\"vc-modal-close\" onClick={onClose}>&times;</button>\n\n                <h2>📜 자격증명(VC) 발급</h2>\n\n                {/* 성공 또는 에러 메시지가 없을 때만 안내문과 버튼을 표시 */}\n                {!successMessage && !error && (\n                    <>\n                        <p>공인중개사 자격증명(VC)을 발급받으시겠습니까? VC가 발급되면 전과기록 등 자격요건에 따라 서비스 이용이 제한될 수 있습니다.</p>\n                        <button\n                            onClick={handleIssueVC}\n                            className=\"vc-submit-button\"\n                            disabled={isLoading}\n                        >\n                            {isLoading ? '발급 진행 중...' : 'VC 발급 실행'}\n                        </button>\n                    </>\n                )}\n\n                {/* 로딩 중일 때 메시지 */}\n                {isLoading && <p>서버와 통신하며 VC를 생성하고 있습니다. 잠시만 기다려주세요...</p>}\n\n                {/* 에러 메시지 표시 */}\n                {error && <p style={{ color: 'red', fontWeight: 'bold' }}>{error}</p>}\n\n                {/* 성공 메시지 표시 */}\n                {successMessage && <p style={{ color: 'green', fontWeight: 'bold' }}>{successMessage}</p>}\n\n            </div>\n        </div>\n    );\n}\n\nexport default VcIssueModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}