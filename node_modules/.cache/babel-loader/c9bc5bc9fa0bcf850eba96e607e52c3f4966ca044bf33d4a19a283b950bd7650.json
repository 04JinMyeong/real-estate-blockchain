{"ast":null,"code":"var _jsxFileName = \"/home/jbj/front/src/components/SignupAgent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react'; // React와 useState를 import 합니다.\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport nacl from 'tweetnacl'; // Ed25519 키 생성용\nimport { encodeBase64 } from 'tweetnacl-util'; // Base64 인코딩용\nimport './Auth.css'; // 기존 CSS 파일\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_API_URL = 'https://2094-165-229-229-106.ngrok-free.app'; // ⬅️ 로컬 백엔드 서버 주소로 잠시 변경함\nconst DID_SIGNUP_API_ENDPOINT = `${BASE_API_URL}/api/brokers/register-with-did`; // 새 엔드포인트\n\nconst SignupAgent = () => {\n  _s();\n  const navigate = useNavigate();\n  const [form, setForm] = useState({\n    platform_username: '',\n    // 백엔드 SignUpBrokerRequest의 PlatformUsername 필드와 매칭\n    platform_password: '',\n    // 백엔드 SignUpBrokerRequest의 PlatformPassword 필드와 매칭\n    confirmPassword: '' // 비밀번호 확인용\n  });\n  const [generatedPrivateKey, setGeneratedPrivateKey] = useState(''); // 생성된 개인키 임시 저장 (사용자 안내용)\n  const [issuedDID, setIssuedDID] = useState(''); // ◀◀◀ DID 저장을 위한 상태 추가\n\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // 🔽🔽🔽 copyToClipboard 함수 정의 추가 🔽🔽🔽\n  const copyToClipboard = (textToCopy, type) => {\n    navigator.clipboard.writeText(textToCopy).then(() => {\n      alert(`✅ ${type}가 클립보드에 복사되었습니다!`);\n    }).catch(err => {\n      console.error('클립보드 복사 실패:', err);\n      alert('❌ 클립보드 복사에 실패했습니다.');\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setGeneratedPrivateKey(''); // 이전 개인키 정보 초기화\n    setIssuedDID(''); // ◀◀◀ 이전 DID 정보 초기화\n\n    if (form.platform_password !== form.confirmPassword) {\n      alert('❌ 비밀번호가 일치하지 않습니다.');\n      return;\n    }\n\n    // 필수 입력 필드 검증 수정\n    if (!form.platform_username || !form.platform_password) {\n      alert('❌ 사용자 아이디와 비밀번호를 모두 입력해주세요.');\n      return;\n    }\n    try {\n      // --- DID 발급을 위한 키 쌍 생성 (Ed25519) ---\n      const keyPair = nacl.sign.keyPair(); // { publicKey: Uint8Array, secretKey: Uint8Array }\n      const publicKeyBytes = keyPair.publicKey;\n      const privateKeyBytes = keyPair.secretKey;\n\n      // 공개키를 Base64 문자열로 인코딩 (서버 전송용)\n      const agentPublicKeyBase64 = encodeBase64(publicKeyBytes);\n      // 개인키를 Base64 문자열로 인코딩 (사용자에게 안전하게 전달/보관 안내용)\n      const agentPrivateKeyBase64 = encodeBase64(privateKeyBytes);\n      console.log(\"프론트엔드에서 생성된 공개키 (Base64):\", agentPublicKeyBase64);\n\n      // 백엔드로 전송할 데이터 구성 수정\n      const registrationData = {\n        platform_username: form.platform_username,\n        platform_password: form.platform_password,\n        agent_public_key: agentPublicKeyBase64,\n        role: 'agent'\n      };\n\n      // Axios를 사용하여 백엔드 API 호출\n      const res = await axios.post(DID_SIGNUP_API_ENDPOINT, registrationData, {\n        headers: {\n          'Content-Type': 'application/json',\n          'ngrok-skip-browser-warning': 'true'\n        }\n      });\n\n      // 성공 시 서버 응답에서 DID 정보 확인\n      const localIssuedDID = res.data.did; // 🔽🔽🔽 변수명 변경 (currentIssuedDID -> localIssuedDID) 🔽🔽🔽\n      setIssuedDID(localIssuedDID); // ◀◀◀ 발급받은 DID 상태에 저장 (localIssuedDID 사용)\n      setGeneratedPrivateKey(agentPrivateKeyBase64); // ◀◀◀ 개인키 상태에 저장 (성공 후 표시)\n\n      // 기존 alert을 화면 피드백으로 대체했으므로, 성공 메시지는 다르게 처리하거나,\n      // 사용자가 정보를 확인하도록 유도하는 메시지로 변경 가능\n      alert(\"✅ 회원가입 및 DID 발급 성공! 아래 정보를 확인하고 안전하게 보관하세요.\");\n\n      // navigate('/'); // 바로 리디렉션하지 않고, 사용자가 정보를 확인할 시간을 줌 (JSX의 버튼으로 처리)\n    } catch (err) {\n      console.error('❌ 회원가입 또는 DID 발급 중 에러:', err.response || err);\n      let errorMessage = '회원가입 또는 DID 발급에 실패했습니다.';\n      if (err.response && err.response.data && err.response.data.error) {\n        errorMessage += `\\n사유: ${err.response.data.error}`;\n      } else if (err.message) {\n        errorMessage += `\\n사유: ${err.message}`;\n      }\n      alert(errorMessage);\n      setGeneratedPrivateKey('');\n      setIssuedDID(''); // 오류 발생 시 DID 정보도 초기화\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83C\\uDFE2 \\uBD80\\uB3D9\\uC0B0\\uC5C5\\uC790 \\uD68C\\uC6D0\\uAC00\\uC785 (DID \\uBC1C\\uAE09)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"platform_username\",\n        type: \"text\",\n        placeholder: \"\\uC0AC\\uC6A9\\uC790 \\uC544\\uC774\\uB514 (\\uD50C\\uB7AB\\uD3FC \\uB85C\\uADF8\\uC778\\uC6A9)\",\n        value: form.platform_username,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"platform_password\",\n        type: \"password\",\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n        value: form.platform_password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"confirmPassword\",\n        type: \"password\",\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n        value: form.confirmPassword,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785 \\uBC0F DID \\uBC1C\\uAE09\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), issuedDID && generatedPrivateKey && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"issued-info-display\",\n      style: {\n        marginTop: '20px',\n        padding: '15px',\n        border: '1px solid #ccc',\n        borderRadius: '5px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"[\\uB9E4\\uC6B0 \\uC911\\uC694] \\uBC1C\\uAE09\\uB41C \\uC815\\uBCF4 (\\uC548\\uC804\\uD558\\uAC8C \\uBCF4\\uAD00\\uD558\\uC138\\uC694!):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uBC1C\\uAE09\\uB41C DID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: issuedDID,\n          readOnly: true,\n          rows: \"2\",\n          style: {\n            width: '100%',\n            resize: 'none',\n            marginTop: '5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => copyToClipboard(issuedDID, 'DID'),\n          style: {\n            marginTop: '5px'\n          },\n          children: \"DID \\uBCF5\\uC0AC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uAC1C\\uC778\\uD0A4 (Base64):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: generatedPrivateKey,\n          readOnly: true,\n          rows: \"4\",\n          style: {\n            width: '100%',\n            resize: 'none',\n            marginTop: '5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => copyToClipboard(generatedPrivateKey, '개인키'),\n          style: {\n            marginTop: '5px'\n          },\n          children: \"\\uAC1C\\uC778\\uD0A4 \\uBCF5\\uC0AC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red',\n          fontWeight: 'bold',\n          marginTop: '10px'\n        },\n        children: \"\\uC774 \\uC815\\uBCF4\\uB294 \\uB2E4\\uC2DC \\uD45C\\uC2DC\\uB418\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4. \\uBC18\\uB4DC\\uC2DC \\uC9C0\\uAE08 \\uBCF5\\uC0AC\\uD558\\uC5EC \\uC548\\uC804\\uD55C \\uACF3\\uC5D0 \\uC800\\uC7A5\\uD558\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        style: {\n          marginTop: '15px'\n        },\n        children: \"\\uD655\\uC778 (\\uBA54\\uC778\\uC73C\\uB85C \\uC774\\uB3D9)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(SignupAgent, \"yZlxviW4jVxaSLQ7tzLRbloWkL4=\", false, function () {\n  return [useNavigate];\n});\n_c = SignupAgent;\nexport default SignupAgent;\nvar _c;\n$RefreshReg$(_c, \"SignupAgent\");","map":{"version":3,"names":["React","useState","axios","useNavigate","nacl","encodeBase64","jsxDEV","_jsxDEV","BASE_API_URL","DID_SIGNUP_API_ENDPOINT","SignupAgent","_s","navigate","form","setForm","platform_username","platform_password","confirmPassword","generatedPrivateKey","setGeneratedPrivateKey","issuedDID","setIssuedDID","handleChange","e","target","name","value","copyToClipboard","textToCopy","type","navigator","clipboard","writeText","then","alert","catch","err","console","error","handleSubmit","preventDefault","keyPair","sign","publicKeyBytes","publicKey","privateKeyBytes","secretKey","agentPublicKeyBase64","agentPrivateKeyBase64","log","registrationData","agent_public_key","role","res","post","headers","localIssuedDID","data","did","response","errorMessage","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","required","style","marginTop","padding","border","borderRadius","marginBottom","readOnly","rows","width","resize","onClick","color","fontWeight","_c","$RefreshReg$"],"sources":["/home/jbj/front/src/components/SignupAgent.js"],"sourcesContent":["import React, { useState } from 'react'; // React와 useState를 import 합니다.\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport nacl from 'tweetnacl'; // Ed25519 키 생성용\nimport { encodeBase64 } from 'tweetnacl-util'; // Base64 인코딩용\nimport './Auth.css'; // 기존 CSS 파일\n\n\nconst BASE_API_URL = 'https://2094-165-229-229-106.ngrok-free.app'; // ⬅️ 로컬 백엔드 서버 주소로 잠시 변경함\nconst DID_SIGNUP_API_ENDPOINT = `${BASE_API_URL}/api/brokers/register-with-did`; // 새 엔드포인트\n\nconst SignupAgent = () => {\n  const navigate = useNavigate();\n\n  const [form, setForm] = useState({\n    platform_username: '', // 백엔드 SignUpBrokerRequest의 PlatformUsername 필드와 매칭\n    platform_password: '', // 백엔드 SignUpBrokerRequest의 PlatformPassword 필드와 매칭\n    confirmPassword: '',   // 비밀번호 확인용\n  });\n\n  const [generatedPrivateKey, setGeneratedPrivateKey] = useState(''); // 생성된 개인키 임시 저장 (사용자 안내용)\n  const [issuedDID, setIssuedDID] = useState(''); // ◀◀◀ DID 저장을 위한 상태 추가\n\n  const handleChange = e => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n  };\n\n  // 🔽🔽🔽 copyToClipboard 함수 정의 추가 🔽🔽🔽\n  const copyToClipboard = (textToCopy, type) => {\n    navigator.clipboard.writeText(textToCopy)\n      .then(() => {\n        alert(`✅ ${type}가 클립보드에 복사되었습니다!`);\n      })\n      .catch(err => {\n        console.error('클립보드 복사 실패:', err);\n        alert('❌ 클립보드 복사에 실패했습니다.');\n      });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setGeneratedPrivateKey(''); // 이전 개인키 정보 초기화\n    setIssuedDID(''); // ◀◀◀ 이전 DID 정보 초기화\n\n    if (form.platform_password !== form.confirmPassword) {\n      alert('❌ 비밀번호가 일치하지 않습니다.');\n      return;\n    }\n\n    // 필수 입력 필드 검증 수정\n    if (!form.platform_username || !form.platform_password) {\n      alert('❌ 사용자 아이디와 비밀번호를 모두 입력해주세요.');\n      return;\n    }\n\n    try {\n      // --- DID 발급을 위한 키 쌍 생성 (Ed25519) ---\n      const keyPair = nacl.sign.keyPair(); // { publicKey: Uint8Array, secretKey: Uint8Array }\n      const publicKeyBytes = keyPair.publicKey;\n      const privateKeyBytes = keyPair.secretKey;\n\n      // 공개키를 Base64 문자열로 인코딩 (서버 전송용)\n      const agentPublicKeyBase64 = encodeBase64(publicKeyBytes);\n      // 개인키를 Base64 문자열로 인코딩 (사용자에게 안전하게 전달/보관 안내용)\n      const agentPrivateKeyBase64 = encodeBase64(privateKeyBytes);\n\n      console.log(\"프론트엔드에서 생성된 공개키 (Base64):\", agentPublicKeyBase64);\n\n      // 백엔드로 전송할 데이터 구성 수정\n      const registrationData = {\n        platform_username: form.platform_username,\n        platform_password: form.platform_password,\n        agent_public_key: agentPublicKeyBase64,\n        role: 'agent'\n      };\n\n      // Axios를 사용하여 백엔드 API 호출\n      const res = await axios.post(DID_SIGNUP_API_ENDPOINT, registrationData, {\n        headers: {\n          'Content-Type': 'application/json',\n          'ngrok-skip-browser-warning': 'true'\n        }\n      });\n\n      // 성공 시 서버 응답에서 DID 정보 확인\n      const localIssuedDID = res.data.did; // 🔽🔽🔽 변수명 변경 (currentIssuedDID -> localIssuedDID) 🔽🔽🔽\n      setIssuedDID(localIssuedDID); // ◀◀◀ 발급받은 DID 상태에 저장 (localIssuedDID 사용)\n      setGeneratedPrivateKey(agentPrivateKeyBase64); // ◀◀◀ 개인키 상태에 저장 (성공 후 표시)\n\n      // 기존 alert을 화면 피드백으로 대체했으므로, 성공 메시지는 다르게 처리하거나,\n      // 사용자가 정보를 확인하도록 유도하는 메시지로 변경 가능\n      alert(\"✅ 회원가입 및 DID 발급 성공! 아래 정보를 확인하고 안전하게 보관하세요.\");\n\n\n      // navigate('/'); // 바로 리디렉션하지 않고, 사용자가 정보를 확인할 시간을 줌 (JSX의 버튼으로 처리)\n\n    } catch (err) {\n      console.error('❌ 회원가입 또는 DID 발급 중 에러:', err.response || err);\n      let errorMessage = '회원가입 또는 DID 발급에 실패했습니다.';\n      if (err.response && err.response.data && err.response.data.error) {\n        errorMessage += `\\n사유: ${err.response.data.error}`;\n      } else if (err.message) {\n        errorMessage += `\\n사유: ${err.message}`;\n      }\n      alert(errorMessage);\n      setGeneratedPrivateKey('');\n      setIssuedDID(''); // 오류 발생 시 DID 정보도 초기화\n    }\n  };\n\n\n  return (\n    <div className=\"auth-container\">\n      <h2>🏢 부동산업자 회원가입 (DID 발급)</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          name=\"platform_username\"\n          type=\"text\"\n          placeholder=\"사용자 아이디 (플랫폼 로그인용)\"\n          value={form.platform_username}\n          onChange={handleChange}\n          required\n        />\n        <input\n          name=\"platform_password\"\n          type=\"password\"\n          placeholder=\"비밀번호\"\n          value={form.platform_password}\n          onChange={handleChange}\n          required\n        />\n        <input\n          name=\"confirmPassword\"\n          type=\"password\"\n          placeholder=\"비밀번호 확인\"\n          value={form.confirmPassword}\n          onChange={handleChange}\n          required\n        />\n        <hr />\n        <button type=\"submit\">회원가입 및 DID 발급</button>\n      </form>\n      {/* ◀◀◀ DID 및 개인키 정보 표시 UI 수정 */}\n      {issuedDID && generatedPrivateKey && (\n        <div className=\"issued-info-display\" style={{ marginTop: '20px', padding: '15px', border: '1px solid #ccc', borderRadius: '5px' }}>\n          <h3>[매우 중요] 발급된 정보 (안전하게 보관하세요!):</h3>\n\n          <div style={{ marginBottom: '10px' }}>\n            <strong>발급된 DID:</strong>\n            <textarea value={issuedDID} readOnly rows=\"2\" style={{ width: '100%', resize: 'none', marginTop: '5px' }} />\n            <button onClick={() => copyToClipboard(issuedDID, 'DID')} style={{ marginTop: '5px' }}>\n              DID 복사\n            </button>\n          </div>\n\n          <div>\n            <strong>개인키 (Base64):</strong>\n            <textarea value={generatedPrivateKey} readOnly rows=\"4\" style={{ width: '100%', resize: 'none', marginTop: '5px' }} />\n            <button onClick={() => copyToClipboard(generatedPrivateKey, '개인키')} style={{ marginTop: '5px' }}>\n              개인키 복사\n            </button>\n          </div>\n\n          <p style={{ color: 'red', fontWeight: 'bold', marginTop: '10px' }}>\n            이 정보는 다시 표시되지 않습니다. 반드시 지금 복사하여 안전한 곳에 저장하세요.\n          </p>\n          <button onClick={() => navigate('/')} style={{ marginTop: '15px' }}>\n            확인 (메인으로 이동)\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SignupAgent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}